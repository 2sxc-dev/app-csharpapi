@inherits Custom.Hybrid.RazorTyped
@using AppCode

@{
  var currentType = MyModel.String("CurrentType");
  var nsInfo = MyModel.Get<NamespaceInfo>("NsInfo");

}
<table>
  @Html.Partial("./VisibilityHeader.cshtml")

  @foreach (var type in nsInfo.Types.Relevant)
  {
    var fullNs = type.Namespace + "." + type.Name;
    var cnf = type.Rule; //?.Item;
    var tlb = cnf == null
      ? Kit.Toolbar.Empty().New("RuleClass", tweak: t => t.Prefill(new { Title = fullNs }))
      : Kit.Toolbar.Edit(cnf);

    var configInfo = type.Rule?.IgnoreAllProperties == true
      ? new Status("ðŸ¦˜", "Ignore all properties")
      : type.RuleNamespace?.IgnoreTypeMembers == true
        ? new Status("ðŸ¦˜", "Ignore all members")
        : type.Rule?.IgnoreMembersWithoutSpecs == true
          ? new Status("ðŸ›…", "Ignore members without specs")
          : null;
    
    <tr class='@(currentType == type.Name ? "selected" : "")' @tlb>
      <td title="@type.TypeSummary.Message">
        @type.TypeSummary.Icon
      </td>
      <td>
        <a href='@Link.To(parameters: MyPage.Parameters.Filter("Dll,Namespace,Type").Toggle("Type", type.Name))'>
          @type.Name
        </a>
      </td>

      @* Standard infos / checkboxes *@
      @Html.Partial("./VisibilityColumns.cshtml", new { type.Visibility, Total = type.Overall })

      @* Configuration *@
      <td title='@(configInfo?.Details)'>
        @(configInfo?.Icon)
      </td>
      <td>
        
      </td>
    </tr>
  }
</table>