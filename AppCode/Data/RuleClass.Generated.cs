// DO NOT MODIFY THIS FILE - IT IS AUTO-GENERATED
// See also: https://go.2sxc.org/copilot-data
// To extend it, create a "RuleClass.cs" with this contents:
/*
namespace AppCode.Data
{
  public partial class RuleClass
  {
    // Add your own properties and methods here
  }
}
*/

// Generator:   DataModelGenerator v17.02.01
// App/Edition: App-CSharpApi/
// User:        2sichost
// When:        2024-02-24 10:50:47Z
namespace AppCode.Data
{
  // This is a generated class for RuleClass
  // To extend/modify it, see instructions above.

  /// <summary>
  /// RuleClass data. <br/>
  /// Generated 2024-02-24 10:50:47Z. Re-generate whenever you change the ContentType. <br/>
  /// <br/>
  /// Default properties such as `.Title` or `.Id` are provided in the base class. <br/>
  /// Most properties have a simple access, such as `.ExpectedDocs`. <br/>
  /// For other properties or uses, use methods such as
  /// .IsNotEmpty("FieldName"), .String("FieldName"), .Children(...), .Picture(...), .Html(...).
  /// </summary>
  public partial class RuleClass: RuleClassAutoGenerated
  {  }

  /// <summary>
  /// Auto-Generated base class for RuleClass.
  /// </summary>
  public abstract class RuleClassAutoGenerated: Custom.Data.Item16
  {
    /// <summary>
    /// ExpectedDocs as bool. <br/>
    /// To get nullable use .Get("ExpectedDocs") as bool?;
    /// </summary>
    public bool ExpectedDocs => _myItem.Bool("ExpectedDocs");

    /// <summary>
    /// ExpectedIntellisense as bool. <br/>
    /// To get nullable use .Get("ExpectedIntellisense") as bool?;
    /// </summary>
    public bool ExpectedIntellisense => _myItem.Bool("ExpectedIntellisense");

    /// <summary>
    /// IgnoreAllProperties as bool. <br/>
    /// To get nullable use .Get("IgnoreAllProperties") as bool?;
    /// </summary>
    public bool IgnoreAllProperties => _myItem.Bool("IgnoreAllProperties");

    /// <summary>
    /// IgnoreMembersWithoutSpecs as bool. <br/>
    /// To get nullable use .Get("IgnoreMembersWithoutSpecs") as bool?;
    /// </summary>
    public bool IgnoreMembersWithoutSpecs => _myItem.Bool("IgnoreMembersWithoutSpecs");

    /// <summary>
    /// Notes as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("Notes", scrubHtml: true) etc.
    /// </summary>
    public string Notes => _myItem.String("Notes", fallback: "");

    /// <summary>
    /// Title as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("Title", scrubHtml: true) etc.
    /// </summary>
    public string Title => _myItem.String("Title", fallback: "");
  }
}